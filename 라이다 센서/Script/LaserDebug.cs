//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class LaserDebug : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal LaserDebug(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LaserDebug obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~LaserDebug() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ydlidarPINVOKE.delete_LaserDebug(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public byte W3F4CusMajor_W4F0CusMinor {
    set {
      ydlidarPINVOKE.LaserDebug_W3F4CusMajor_W4F0CusMinor_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W3F4CusMajor_W4F0CusMinor_get(swigCPtr);
      return ret;
    } 
  }

  public byte W4F3Model_W3F0DebugInfTranVer {
    set {
      ydlidarPINVOKE.LaserDebug_W4F3Model_W3F0DebugInfTranVer_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W4F3Model_W3F0DebugInfTranVer_get(swigCPtr);
      return ret;
    } 
  }

  public byte W3F4HardwareVer_W4F0FirewareMajor {
    set {
      ydlidarPINVOKE.LaserDebug_W3F4HardwareVer_W4F0FirewareMajor_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W3F4HardwareVer_W4F0FirewareMajor_get(swigCPtr);
      return ret;
    } 
  }

  public byte W7F0FirewareMinor {
    set {
      ydlidarPINVOKE.LaserDebug_W7F0FirewareMinor_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W7F0FirewareMinor_get(swigCPtr);
      return ret;
    } 
  }

  public byte W3F4BoradHardVer_W4F0Moth {
    set {
      ydlidarPINVOKE.LaserDebug_W3F4BoradHardVer_W4F0Moth_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W3F4BoradHardVer_W4F0Moth_get(swigCPtr);
      return ret;
    } 
  }

  public byte W2F5Output2K4K5K_W5F0Date {
    set {
      ydlidarPINVOKE.LaserDebug_W2F5Output2K4K5K_W5F0Date_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W2F5Output2K4K5K_W5F0Date_get(swigCPtr);
      return ret;
    } 
  }

  public byte W1F6GNoise_W1F5SNoise_W1F4MotorCtl_W4F0SnYear {
    set {
      ydlidarPINVOKE.LaserDebug_W1F6GNoise_W1F5SNoise_W1F4MotorCtl_W4F0SnYear_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W1F6GNoise_W1F5SNoise_W1F4MotorCtl_W4F0SnYear_get(swigCPtr);
      return ret;
    } 
  }

  public byte W7F0SnNumH {
    set {
      ydlidarPINVOKE.LaserDebug_W7F0SnNumH_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W7F0SnNumH_get(swigCPtr);
      return ret;
    } 
  }

  public byte W7F0SnNumL {
    set {
      ydlidarPINVOKE.LaserDebug_W7F0SnNumL_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W7F0SnNumL_get(swigCPtr);
      return ret;
    } 
  }

  public byte W7F0Health {
    set {
      ydlidarPINVOKE.LaserDebug_W7F0Health_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W7F0Health_get(swigCPtr);
      return ret;
    } 
  }

  public byte W3F4CusHardVer_W4F0CusSoftVer {
    set {
      ydlidarPINVOKE.LaserDebug_W3F4CusHardVer_W4F0CusSoftVer_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W3F4CusHardVer_W4F0CusSoftVer_get(swigCPtr);
      return ret;
    } 
  }

  public byte W7F0LaserCurrent {
    set {
      ydlidarPINVOKE.LaserDebug_W7F0LaserCurrent_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_W7F0LaserCurrent_get(swigCPtr);
      return ret;
    } 
  }

  public byte MaxDebugIndex {
    set {
      ydlidarPINVOKE.LaserDebug_MaxDebugIndex_set(swigCPtr, value);
    } 
    get {
      byte ret = ydlidarPINVOKE.LaserDebug_MaxDebugIndex_get(swigCPtr);
      return ret;
    } 
  }

  public LaserDebug() : this(ydlidarPINVOKE.new_LaserDebug(), true) {
  }

}
